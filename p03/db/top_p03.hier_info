|top_p03_tb
clk => cmd_fsm:cmd_fsm_inst.clk
clk => nibb_reg:size_register.clk
clk => top_processors:top_processors_inst.clk
rst => cmd_fsm:cmd_fsm_inst.rst
rst => nibb_reg:size_register.rst
rst => top_processors:top_processors_inst.rst
rx_interrupt => cmd_fsm:cmd_fsm_inst.rx_interrupt
data[0] => cmd_fsm:cmd_fsm_inst.uart_data[0]
data[0] => nibb_reg:size_register.in[0]
data[0] => top_processors:top_processors_inst.uart[0]
data[1] => cmd_fsm:cmd_fsm_inst.uart_data[1]
data[1] => nibb_reg:size_register.in[1]
data[1] => top_processors:top_processors_inst.uart[1]
data[2] => cmd_fsm:cmd_fsm_inst.uart_data[2]
data[2] => nibb_reg:size_register.in[2]
data[2] => top_processors:top_processors_inst.uart[2]
data[3] => cmd_fsm:cmd_fsm_inst.uart_data[3]
data[3] => nibb_reg:size_register.in[3]
data[3] => top_processors:top_processors_inst.uart[3]
data[4] => cmd_fsm:cmd_fsm_inst.uart_data[4]
data[4] => top_processors:top_processors_inst.uart[4]
data[5] => cmd_fsm:cmd_fsm_inst.uart_data[5]
data[5] => top_processors:top_processors_inst.uart[5]
data[6] => cmd_fsm:cmd_fsm_inst.uart_data[6]
data[6] => top_processors:top_processors_inst.uart[6]
data[7] => cmd_fsm:cmd_fsm_inst.uart_data[7]
data[7] => top_processors:top_processors_inst.uart[7]
tx << <GND>
ready << top_processors:top_processors_inst.ready
full_A << top_processors:top_processors_inst.full_A
empty_A << top_processors:top_processors_inst.empty_A
clear_interrupt << cmd_fsm:cmd_fsm_inst.clear_interrupt


|top_p03_tb|cmd_fsm:cmd_fsm_inst
clk => status~11.DATAIN
rst => status~13.DATAIN
uart_data[0] => Decoder0.IN7
uart_data[0] => Equal0.IN7
uart_data[0] => Equal1.IN6
uart_data[1] => Decoder0.IN6
uart_data[1] => Equal0.IN6
uart_data[1] => Equal1.IN5
uart_data[2] => Decoder0.IN5
uart_data[2] => Equal0.IN5
uart_data[2] => Equal1.IN4
uart_data[3] => Decoder0.IN4
uart_data[3] => Equal0.IN4
uart_data[3] => Equal1.IN3
uart_data[4] => Decoder0.IN3
uart_data[4] => Equal0.IN3
uart_data[4] => Equal1.IN7
uart_data[5] => Decoder0.IN2
uart_data[5] => Equal0.IN2
uart_data[5] => Equal1.IN2
uart_data[6] => Decoder0.IN1
uart_data[6] => Equal0.IN1
uart_data[6] => Equal1.IN1
uart_data[7] => Decoder0.IN0
uart_data[7] => Equal0.IN0
uart_data[7] => Equal1.IN0
rx_interrupt => always0.IN1
rx_interrupt => status.OUTPUTSELECT
rx_interrupt => status.OUTPUTSELECT
rx_interrupt => status.OUTPUTSELECT
rx_interrupt => status.OUTPUTSELECT
rx_interrupt => status.OUTPUTSELECT
rx_interrupt => status.OUTPUTSELECT
rx_interrupt => status.OUTPUTSELECT
rx_interrupt => status.OUTPUTSELECT
rx_interrupt => status.OUTPUTSELECT
rx_interrupt => status.OUTPUTSELECT
rx_interrupt => status.OUTPUTSELECT
rx_interrupt => status.OUTPUTSELECT
rx_interrupt => status.OUTPUTSELECT
rx_interrupt => status.OUTPUTSELECT
rx_interrupt => status.OUTPUTSELECT
rx_interrupt => status.OUTPUTSELECT
rx_interrupt => status.OUTPUTSELECT
rx_interrupt => status.OUTPUTSELECT
rx_interrupt => status.OUTPUTSELECT
rx_interrupt => status.OUTPUTSELECT
rx_interrupt => status.OUTPUTSELECT
rx_interrupt => status.OUTPUTSELECT
rx_interrupt => status.OUTPUTSELECT
rx_interrupt => status.OUTPUTSELECT
rx_interrupt => Selector2.IN8
rx_interrupt => Selector1.IN2
rx_interrupt => Selector2.IN1
clear_interrupt <= <GND>
push_A <= push_A.DB_MAX_OUTPUT_PORT_TYPE
push_B <= push_B.DB_MAX_OUTPUT_PORT_TYPE
enable_n <= enable_n.DB_MAX_OUTPUT_PORT_TYPE
clear <= <GND>


|top_p03_tb|nibb_reg:size_register
clk => out[0]~reg0.CLK
clk => out[1]~reg0.CLK
clk => out[2]~reg0.CLK
clk => out[3]~reg0.CLK
rst => out[0]~reg0.ACLR
rst => out[1]~reg0.ACLR
rst => out[2]~reg0.ACLR
rst => out[3]~reg0.ACLR
enb => out[0]~reg0.ENA
enb => out[3]~reg0.ENA
enb => out[2]~reg0.ENA
enb => out[1]~reg0.ENA
in[0] => out[0]~reg0.DATAIN
in[1] => out[1]~reg0.DATAIN
in[2] => out[2]~reg0.DATAIN
in[3] => out[3]~reg0.DATAIN
out[0] <= out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top_p03_tb|top_processors:top_processors_inst
uart[0] => fifo_matrix:matrix.data_in[0]
uart[0] => fifo_vector:vector.data_in[0]
uart[1] => fifo_matrix:matrix.data_in[1]
uart[1] => fifo_vector:vector.data_in[1]
uart[2] => fifo_matrix:matrix.data_in[2]
uart[2] => fifo_vector:vector.data_in[2]
uart[3] => fifo_matrix:matrix.data_in[3]
uart[3] => fifo_vector:vector.data_in[3]
uart[4] => fifo_matrix:matrix.data_in[4]
uart[4] => fifo_vector:vector.data_in[4]
uart[5] => fifo_matrix:matrix.data_in[5]
uart[5] => fifo_vector:vector.data_in[5]
uart[6] => fifo_matrix:matrix.data_in[6]
uart[6] => fifo_vector:vector.data_in[6]
uart[7] => fifo_matrix:matrix.data_in[7]
uart[7] => fifo_vector:vector.data_in[7]
clk => fifo_matrix:matrix.clk
clk => fifo_vector:vector.clk
clk => fifo_vector:fifo_result.clk
clk => processor:processor1_inst.clk
clk => fsm_processor:fsm_p_inst.clk
rst => fifo_matrix:matrix.rst
rst => fifo_vector:vector.rst
rst => fifo_vector:fifo_result.rst
rst => processor:processor1_inst.rst
rst => fsm_processor:fsm_p_inst.rst
push_A => fifo_matrix:matrix.push
push_B => fifo_vector:vector.push
N[0] => fifo_matrix:matrix.N[0]
N[0] => fifo_vector:vector.N[0]
N[0] => fifo_vector:fifo_result.N[0]
N[0] => fsm_processor:fsm_p_inst.N[0]
N[1] => fifo_matrix:matrix.N[1]
N[1] => fifo_vector:vector.N[1]
N[1] => fifo_vector:fifo_result.N[1]
N[1] => fsm_processor:fsm_p_inst.N[1]
N[2] => fifo_matrix:matrix.N[2]
N[2] => fifo_vector:vector.N[2]
N[2] => fifo_vector:fifo_result.N[2]
N[2] => fsm_processor:fsm_p_inst.N[2]
N[3] => fifo_matrix:matrix.N[3]
N[3] => fifo_vector:vector.N[3]
N[3] => fifo_vector:fifo_result.N[3]
N[3] => fsm_processor:fsm_p_inst.N[3]
clear => ~NO_FANOUT~
full_A <= fifo_matrix:matrix.full
empty_A <= fifo_matrix:matrix.empty
ready <= fifo_vector:fifo_result.ready
transmit <= fsm_processor:fsm_p_inst.transmit
result_uart_w[0] <= fifo_vector:fifo_result.data_out[0]
result_uart_w[1] <= fifo_vector:fifo_result.data_out[1]
result_uart_w[2] <= fifo_vector:fifo_result.data_out[2]
result_uart_w[3] <= fifo_vector:fifo_result.data_out[3]
result_uart_w[4] <= fifo_vector:fifo_result.data_out[4]
result_uart_w[5] <= fifo_vector:fifo_result.data_out[5]
result_uart_w[6] <= fifo_vector:fifo_result.data_out[6]
result_uart_w[7] <= fifo_vector:fifo_result.data_out[7]


|top_p03_tb|top_processors:top_processors_inst|fifo_matrix:matrix
clk => clk.IN3
rst => rst.IN2
pop => pop.IN1
push => push.IN1
data_in[0] => data_in[0].IN1
data_in[1] => data_in[1].IN1
data_in[2] => data_in[2].IN1
data_in[3] => data_in[3].IN1
data_in[4] => data_in[4].IN1
data_in[5] => data_in[5].IN1
data_in[6] => data_in[6].IN1
data_in[7] => data_in[7].IN1
N[0] => N[0].IN1
N[1] => N[1].IN1
N[2] => N[2].IN1
N[3] => N[3].IN1
full <= full_w.DB_MAX_OUTPUT_PORT_TYPE
empty <= empty_w.DB_MAX_OUTPUT_PORT_TYPE
data_out[0] <= ram_matrix:ramM.data_out
data_out[1] <= ram_matrix:ramM.data_out
data_out[2] <= ram_matrix:ramM.data_out
data_out[3] <= ram_matrix:ramM.data_out
data_out[4] <= ram_matrix:ramM.data_out
data_out[5] <= ram_matrix:ramM.data_out
data_out[6] <= ram_matrix:ramM.data_out
data_out[7] <= ram_matrix:ramM.data_out
ready <= pointers_M:pointers_M_inst.ready


|top_p03_tb|top_processors:top_processors_inst|fifo_matrix:matrix|fsm_fifo:fsm_fifo_inst
clk => ~NO_FANOUT~
rst => ~NO_FANOUT~
pop => always0.IN0
push => always0.IN0
full => always0.IN1
empty => always0.IN1
wr_en <= always0.DB_MAX_OUTPUT_PORT_TYPE
rd_en <= always0.DB_MAX_OUTPUT_PORT_TYPE


|top_p03_tb|top_processors:top_processors_inst|fifo_matrix:matrix|ram_matrix:ramM
clk => ram.we_a.CLK
clk => ram.waddr_a[5].CLK
clk => ram.waddr_a[4].CLK
clk => ram.waddr_a[3].CLK
clk => ram.waddr_a[2].CLK
clk => ram.waddr_a[1].CLK
clk => ram.waddr_a[0].CLK
clk => ram.data_a[7].CLK
clk => ram.data_a[6].CLK
clk => ram.data_a[5].CLK
clk => ram.data_a[4].CLK
clk => ram.data_a[3].CLK
clk => ram.data_a[2].CLK
clk => ram.data_a[1].CLK
clk => ram.data_a[0].CLK
clk => data_out[0]~reg0.CLK
clk => data_out[1]~reg0.CLK
clk => data_out[2]~reg0.CLK
clk => data_out[3]~reg0.CLK
clk => data_out[4]~reg0.CLK
clk => data_out[5]~reg0.CLK
clk => data_out[6]~reg0.CLK
clk => data_out[7]~reg0.CLK
clk => ram.CLK0
rd_en => data_out[0]~reg0.ENA
rd_en => data_out[1]~reg0.ENA
rd_en => data_out[2]~reg0.ENA
rd_en => data_out[3]~reg0.ENA
rd_en => data_out[4]~reg0.ENA
rd_en => data_out[5]~reg0.ENA
rd_en => data_out[6]~reg0.ENA
rd_en => data_out[7]~reg0.ENA
wr_en => ram.we_a.DATAIN
wr_en => ram.WE
count_push[0] => ram.waddr_a[0].DATAIN
count_push[0] => ram.WADDR
count_push[1] => ram.waddr_a[1].DATAIN
count_push[1] => ram.WADDR1
count_push[2] => ram.waddr_a[2].DATAIN
count_push[2] => ram.WADDR2
count_push[3] => ram.waddr_a[3].DATAIN
count_push[3] => ram.WADDR3
count_push[4] => ram.waddr_a[4].DATAIN
count_push[4] => ram.WADDR4
count_push[5] => ram.waddr_a[5].DATAIN
count_push[5] => ram.WADDR5
count_pop[0] => ram.RADDR
count_pop[1] => ram.RADDR1
count_pop[2] => ram.RADDR2
count_pop[3] => ram.RADDR3
count_pop[4] => ram.RADDR4
count_pop[5] => ram.RADDR5
data_in[0] => ram.data_a[0].DATAIN
data_in[0] => ram.DATAIN
data_in[1] => ram.data_a[1].DATAIN
data_in[1] => ram.DATAIN1
data_in[2] => ram.data_a[2].DATAIN
data_in[2] => ram.DATAIN2
data_in[3] => ram.data_a[3].DATAIN
data_in[3] => ram.DATAIN3
data_in[4] => ram.data_a[4].DATAIN
data_in[4] => ram.DATAIN4
data_in[5] => ram.data_a[5].DATAIN
data_in[5] => ram.DATAIN5
data_in[6] => ram.data_a[6].DATAIN
data_in[6] => ram.DATAIN6
data_in[7] => ram.data_a[7].DATAIN
data_in[7] => ram.DATAIN7
data_out[0] <= data_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= data_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= data_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= data_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[4] <= data_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[5] <= data_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[6] <= data_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[7] <= data_out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top_p03_tb|top_processors:top_processors_inst|fifo_matrix:matrix|pointers_M:pointers_M_inst
clk => count_push[0]~reg0.CLK
clk => count_push[1]~reg0.CLK
clk => count_push[2]~reg0.CLK
clk => count_push[3]~reg0.CLK
clk => count_push[4]~reg0.CLK
clk => count_push[5]~reg0.CLK
clk => count_push[6]~reg0.CLK
clk => count_pop[0]~reg0.CLK
clk => count_pop[1]~reg0.CLK
clk => count_pop[2]~reg0.CLK
clk => count_pop[3]~reg0.CLK
clk => count_pop[4]~reg0.CLK
clk => count_pop[5]~reg0.CLK
clk => count_pop[6]~reg0.CLK
rst => count_push[0]~reg0.ACLR
rst => count_push[1]~reg0.ACLR
rst => count_push[2]~reg0.ACLR
rst => count_push[3]~reg0.ACLR
rst => count_push[4]~reg0.ACLR
rst => count_push[5]~reg0.ACLR
rst => count_push[6]~reg0.ACLR
rst => count_pop[0]~reg0.ACLR
rst => count_pop[1]~reg0.ACLR
rst => count_pop[2]~reg0.ACLR
rst => count_pop[3]~reg0.ACLR
rst => count_pop[4]~reg0.ACLR
rst => count_pop[5]~reg0.ACLR
rst => count_pop[6]~reg0.ACLR
push => count_push[0]~reg0.ENA
push => count_push[6]~reg0.ENA
push => count_push[5]~reg0.ENA
push => count_push[4]~reg0.ENA
push => count_push[3]~reg0.ENA
push => count_push[2]~reg0.ENA
push => count_push[1]~reg0.ENA
pop => count_pop[6]~reg0.ENA
pop => count_pop[5]~reg0.ENA
pop => count_pop[4]~reg0.ENA
pop => count_pop[3]~reg0.ENA
pop => count_pop[2]~reg0.ENA
pop => count_pop[1]~reg0.ENA
pop => count_pop[0]~reg0.ENA
N[0] => Mult0.IN6
N[0] => Mult0.IN7
N[1] => Mult0.IN4
N[1] => Mult0.IN5
N[2] => Mult0.IN2
N[2] => Mult0.IN3
N[3] => Mult0.IN0
N[3] => Mult0.IN1
count_push[0] <= count_push[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count_push[1] <= count_push[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count_push[2] <= count_push[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count_push[3] <= count_push[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count_push[4] <= count_push[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count_push[5] <= count_push[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count_push[6] <= count_push[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count_pop[0] <= count_pop[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count_pop[1] <= count_pop[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count_pop[2] <= count_pop[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count_pop[3] <= count_pop[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count_pop[4] <= count_pop[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count_pop[5] <= count_pop[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count_pop[6] <= count_pop[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
empty <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
full <= always1.DB_MAX_OUTPUT_PORT_TYPE
ready <= ready.DB_MAX_OUTPUT_PORT_TYPE


|top_p03_tb|top_processors:top_processors_inst|fifo_vector:vector
clk => clk.IN2
rst => rst.IN1
pop => pop.IN2
push => push.IN2
data_in[0] => data_in[0].IN1
data_in[1] => data_in[1].IN1
data_in[2] => data_in[2].IN1
data_in[3] => data_in[3].IN1
data_in[4] => data_in[4].IN1
data_in[5] => data_in[5].IN1
data_in[6] => data_in[6].IN1
data_in[7] => data_in[7].IN1
N[0] => N[0].IN1
N[1] => N[1].IN1
N[2] => N[2].IN1
N[3] => N[3].IN1
data_out[0] <= ram_vector:ramV.data_out
data_out[1] <= ram_vector:ramV.data_out
data_out[2] <= ram_vector:ramV.data_out
data_out[3] <= ram_vector:ramV.data_out
data_out[4] <= ram_vector:ramV.data_out
data_out[5] <= ram_vector:ramV.data_out
data_out[6] <= ram_vector:ramV.data_out
data_out[7] <= ram_vector:ramV.data_out
ready <= pointers:pointers_inst.ready


|top_p03_tb|top_processors:top_processors_inst|fifo_vector:vector|ram_vector:ramV
clk => ram.we_a.CLK
clk => ram.waddr_a[2].CLK
clk => ram.waddr_a[1].CLK
clk => ram.waddr_a[0].CLK
clk => ram.data_a[7].CLK
clk => ram.data_a[6].CLK
clk => ram.data_a[5].CLK
clk => ram.data_a[4].CLK
clk => ram.data_a[3].CLK
clk => ram.data_a[2].CLK
clk => ram.data_a[1].CLK
clk => ram.data_a[0].CLK
clk => data_out[0]~reg0.CLK
clk => data_out[1]~reg0.CLK
clk => data_out[2]~reg0.CLK
clk => data_out[3]~reg0.CLK
clk => data_out[4]~reg0.CLK
clk => data_out[5]~reg0.CLK
clk => data_out[6]~reg0.CLK
clk => data_out[7]~reg0.CLK
clk => ram.CLK0
rd_en => data_out[0]~reg0.ENA
rd_en => data_out[1]~reg0.ENA
rd_en => data_out[2]~reg0.ENA
rd_en => data_out[3]~reg0.ENA
rd_en => data_out[4]~reg0.ENA
rd_en => data_out[5]~reg0.ENA
rd_en => data_out[6]~reg0.ENA
rd_en => data_out[7]~reg0.ENA
wr_en => ram.we_a.DATAIN
wr_en => ram.WE
count_push[0] => ram.waddr_a[0].DATAIN
count_push[0] => ram.WADDR
count_push[1] => ram.waddr_a[1].DATAIN
count_push[1] => ram.WADDR1
count_push[2] => ram.waddr_a[2].DATAIN
count_push[2] => ram.WADDR2
count_pop[0] => ram.RADDR
count_pop[1] => ram.RADDR1
count_pop[2] => ram.RADDR2
data_in[0] => ram.data_a[0].DATAIN
data_in[0] => ram.DATAIN
data_in[1] => ram.data_a[1].DATAIN
data_in[1] => ram.DATAIN1
data_in[2] => ram.data_a[2].DATAIN
data_in[2] => ram.DATAIN2
data_in[3] => ram.data_a[3].DATAIN
data_in[3] => ram.DATAIN3
data_in[4] => ram.data_a[4].DATAIN
data_in[4] => ram.DATAIN4
data_in[5] => ram.data_a[5].DATAIN
data_in[5] => ram.DATAIN5
data_in[6] => ram.data_a[6].DATAIN
data_in[6] => ram.DATAIN6
data_in[7] => ram.data_a[7].DATAIN
data_in[7] => ram.DATAIN7
data_out[0] <= data_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= data_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= data_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= data_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[4] <= data_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[5] <= data_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[6] <= data_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[7] <= data_out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top_p03_tb|top_processors:top_processors_inst|fifo_vector:vector|pointers:pointers_inst
clk => count_push[0]~reg0.CLK
clk => count_push[1]~reg0.CLK
clk => count_push[2]~reg0.CLK
clk => count_push[3]~reg0.CLK
clk => count_pop[0]~reg0.CLK
clk => count_pop[1]~reg0.CLK
clk => count_pop[2]~reg0.CLK
clk => count_pop[3]~reg0.CLK
rst => count_push[0]~reg0.ACLR
rst => count_push[1]~reg0.ACLR
rst => count_push[2]~reg0.ACLR
rst => count_push[3]~reg0.ACLR
rst => count_pop[0]~reg0.ACLR
rst => count_pop[1]~reg0.ACLR
rst => count_pop[2]~reg0.ACLR
rst => count_pop[3]~reg0.ACLR
push => count_push[3]~reg0.ENA
push => count_push[2]~reg0.ENA
push => count_push[1]~reg0.ENA
push => count_push[0]~reg0.ENA
pop => count_pop[3]~reg0.ENA
pop => count_pop[2]~reg0.ENA
pop => count_pop[1]~reg0.ENA
pop => count_pop[0]~reg0.ENA
N[0] => Equal0.IN3
N[0] => Equal1.IN3
N[1] => Equal0.IN2
N[1] => Equal1.IN2
N[2] => Equal0.IN1
N[2] => Equal1.IN1
N[3] => Equal0.IN0
N[3] => Equal1.IN0
count_push[0] <= count_push[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count_push[1] <= count_push[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count_push[2] <= count_push[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count_push[3] <= count_push[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count_pop[0] <= count_pop[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count_pop[1] <= count_pop[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count_pop[2] <= count_pop[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count_pop[3] <= count_pop[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ready <= Equal1.DB_MAX_OUTPUT_PORT_TYPE


|top_p03_tb|top_processors:top_processors_inst|logic_and:logic_and_inst
a => out.IN0
b => out.IN1
out <= out.DB_MAX_OUTPUT_PORT_TYPE


|top_p03_tb|top_processors:top_processors_inst|fifo_vector:fifo_result
clk => clk.IN2
rst => rst.IN1
pop => pop.IN2
push => push.IN2
data_in[0] => data_in[0].IN1
data_in[1] => data_in[1].IN1
data_in[2] => data_in[2].IN1
data_in[3] => data_in[3].IN1
data_in[4] => data_in[4].IN1
data_in[5] => data_in[5].IN1
data_in[6] => data_in[6].IN1
data_in[7] => data_in[7].IN1
N[0] => N[0].IN1
N[1] => N[1].IN1
N[2] => N[2].IN1
N[3] => N[3].IN1
data_out[0] <= ram_vector:ramV.data_out
data_out[1] <= ram_vector:ramV.data_out
data_out[2] <= ram_vector:ramV.data_out
data_out[3] <= ram_vector:ramV.data_out
data_out[4] <= ram_vector:ramV.data_out
data_out[5] <= ram_vector:ramV.data_out
data_out[6] <= ram_vector:ramV.data_out
data_out[7] <= ram_vector:ramV.data_out
ready <= pointers:pointers_inst.ready


|top_p03_tb|top_processors:top_processors_inst|fifo_vector:fifo_result|ram_vector:ramV
clk => ram.we_a.CLK
clk => ram.waddr_a[2].CLK
clk => ram.waddr_a[1].CLK
clk => ram.waddr_a[0].CLK
clk => ram.data_a[7].CLK
clk => ram.data_a[6].CLK
clk => ram.data_a[5].CLK
clk => ram.data_a[4].CLK
clk => ram.data_a[3].CLK
clk => ram.data_a[2].CLK
clk => ram.data_a[1].CLK
clk => ram.data_a[0].CLK
clk => data_out[0]~reg0.CLK
clk => data_out[1]~reg0.CLK
clk => data_out[2]~reg0.CLK
clk => data_out[3]~reg0.CLK
clk => data_out[4]~reg0.CLK
clk => data_out[5]~reg0.CLK
clk => data_out[6]~reg0.CLK
clk => data_out[7]~reg0.CLK
clk => ram.CLK0
rd_en => data_out[0]~reg0.ENA
rd_en => data_out[1]~reg0.ENA
rd_en => data_out[2]~reg0.ENA
rd_en => data_out[3]~reg0.ENA
rd_en => data_out[4]~reg0.ENA
rd_en => data_out[5]~reg0.ENA
rd_en => data_out[6]~reg0.ENA
rd_en => data_out[7]~reg0.ENA
wr_en => ram.we_a.DATAIN
wr_en => ram.WE
count_push[0] => ram.waddr_a[0].DATAIN
count_push[0] => ram.WADDR
count_push[1] => ram.waddr_a[1].DATAIN
count_push[1] => ram.WADDR1
count_push[2] => ram.waddr_a[2].DATAIN
count_push[2] => ram.WADDR2
count_pop[0] => ram.RADDR
count_pop[1] => ram.RADDR1
count_pop[2] => ram.RADDR2
data_in[0] => ram.data_a[0].DATAIN
data_in[0] => ram.DATAIN
data_in[1] => ram.data_a[1].DATAIN
data_in[1] => ram.DATAIN1
data_in[2] => ram.data_a[2].DATAIN
data_in[2] => ram.DATAIN2
data_in[3] => ram.data_a[3].DATAIN
data_in[3] => ram.DATAIN3
data_in[4] => ram.data_a[4].DATAIN
data_in[4] => ram.DATAIN4
data_in[5] => ram.data_a[5].DATAIN
data_in[5] => ram.DATAIN5
data_in[6] => ram.data_a[6].DATAIN
data_in[6] => ram.DATAIN6
data_in[7] => ram.data_a[7].DATAIN
data_in[7] => ram.DATAIN7
data_out[0] <= data_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= data_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= data_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= data_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[4] <= data_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[5] <= data_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[6] <= data_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[7] <= data_out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top_p03_tb|top_processors:top_processors_inst|fifo_vector:fifo_result|pointers:pointers_inst
clk => count_push[0]~reg0.CLK
clk => count_push[1]~reg0.CLK
clk => count_push[2]~reg0.CLK
clk => count_push[3]~reg0.CLK
clk => count_pop[0]~reg0.CLK
clk => count_pop[1]~reg0.CLK
clk => count_pop[2]~reg0.CLK
clk => count_pop[3]~reg0.CLK
rst => count_push[0]~reg0.ACLR
rst => count_push[1]~reg0.ACLR
rst => count_push[2]~reg0.ACLR
rst => count_push[3]~reg0.ACLR
rst => count_pop[0]~reg0.ACLR
rst => count_pop[1]~reg0.ACLR
rst => count_pop[2]~reg0.ACLR
rst => count_pop[3]~reg0.ACLR
push => count_push[3]~reg0.ENA
push => count_push[2]~reg0.ENA
push => count_push[1]~reg0.ENA
push => count_push[0]~reg0.ENA
pop => count_pop[3]~reg0.ENA
pop => count_pop[2]~reg0.ENA
pop => count_pop[1]~reg0.ENA
pop => count_pop[0]~reg0.ENA
N[0] => Equal0.IN3
N[0] => Equal1.IN3
N[1] => Equal0.IN2
N[1] => Equal1.IN2
N[2] => Equal0.IN1
N[2] => Equal1.IN1
N[3] => Equal0.IN0
N[3] => Equal1.IN0
count_push[0] <= count_push[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count_push[1] <= count_push[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count_push[2] <= count_push[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count_push[3] <= count_push[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count_pop[0] <= count_pop[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count_pop[1] <= count_pop[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count_pop[2] <= count_pop[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count_pop[3] <= count_pop[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ready <= Equal1.DB_MAX_OUTPUT_PORT_TYPE


|top_p03_tb|top_processors:top_processors_inst|processor:processor1_inst
clk => out[0]~reg0.CLK
clk => out[1]~reg0.CLK
clk => out[2]~reg0.CLK
clk => out[3]~reg0.CLK
clk => out[4]~reg0.CLK
clk => out[5]~reg0.CLK
clk => out[6]~reg0.CLK
clk => out[7]~reg0.CLK
rst => out[0]~reg0.ACLR
rst => out[1]~reg0.ACLR
rst => out[2]~reg0.ACLR
rst => out[3]~reg0.ACLR
rst => out[4]~reg0.ACLR
rst => out[5]~reg0.ACLR
rst => out[6]~reg0.ACLR
rst => out[7]~reg0.ACLR
A[0] => Mult0.IN7
A[1] => Mult0.IN6
A[2] => Mult0.IN5
A[3] => Mult0.IN4
A[4] => Mult0.IN3
A[5] => Mult0.IN2
A[6] => Mult0.IN1
A[7] => Mult0.IN0
B[0] => Mult0.IN15
B[1] => Mult0.IN14
B[2] => Mult0.IN13
B[3] => Mult0.IN12
B[4] => Mult0.IN11
B[5] => Mult0.IN10
B[6] => Mult0.IN9
B[7] => Mult0.IN8
enable => out.OUTPUTSELECT
enable => out.OUTPUTSELECT
enable => out.OUTPUTSELECT
enable => out.OUTPUTSELECT
enable => out.OUTPUTSELECT
enable => out.OUTPUTSELECT
enable => out.OUTPUTSELECT
enable => out.OUTPUTSELECT
retro => out.OUTPUTSELECT
retro => out.OUTPUTSELECT
retro => out.OUTPUTSELECT
retro => out.OUTPUTSELECT
retro => out.OUTPUTSELECT
retro => out.OUTPUTSELECT
retro => out.OUTPUTSELECT
retro => out.OUTPUTSELECT
out[0] <= out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[6] <= out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[7] <= out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top_p03_tb|top_processors:top_processors_inst|fsm_processor:fsm_p_inst
clk => chain_cnt[0].CLK
clk => chain_cnt[1].CLK
clk => chain_cnt[2].CLK
clk => cnt[0].CLK
clk => cnt[1].CLK
clk => cnt[2].CLK
clk => state~1.DATAIN
rst => cnt[0].ACLR
rst => cnt[1].ACLR
rst => cnt[2].ACLR
rst => chain_cnt[0].ACLR
rst => chain_cnt[1].ACLR
rst => chain_cnt[2].ACLR
rst => state~3.DATAIN
start => Selector1.IN4
start => Selector0.IN1
N[0] => Equal0.IN4
N[0] => Equal1.IN4
N[1] => Equal0.IN3
N[1] => Equal1.IN3
N[2] => Equal0.IN2
N[2] => Equal1.IN2
N[3] => Equal0.IN1
N[3] => Equal1.IN1
p_retro <= p_retro.DB_MAX_OUTPUT_PORT_TYPE
p_enable <= p_enable.DB_MAX_OUTPUT_PORT_TYPE
pop_result <= pop_result.DB_MAX_OUTPUT_PORT_TYPE
transmit <= transmit.DB_MAX_OUTPUT_PORT_TYPE
pop <= pop.DB_MAX_OUTPUT_PORT_TYPE
push <= p_retro.DB_MAX_OUTPUT_PORT_TYPE


